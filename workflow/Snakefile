"""
NetInfer: A Snakemake pipeline for microbiome network inference
"""
# netinfer --input test/data/abundance.tsv --output test/testout --taxonomy test/data/taxonomy.tsv --threads 6 --config config/config.yaml --snake_args="--unlock"

import os
import re
import sys
import platform
from snakemake.utils import min_version

# Set minimum Snakemake version
min_version("9.0.0")

# Load configuration
configfile: "config/config.yaml"

# Include rules
include: "rules/preprocessing.smk"
include: "rules/flashweave.smk"
include: "rules/flashweaveHE.smk"
include: "rules/fastspar.smk"
include: "rules/spearman.smk"
include: "rules/spieceasi.smk"
include: "rules/propr.smk"
include: "rules/jaccard.smk"
include: "rules/aggregation.smk"
include: "rules/visualization.smk"

# Get output directory from config and ensure no whitespace
outdir = config.get("output_dir", "results").strip()  # Default to "results" if not specified

# Define final output files
final_outputs = [f"{outdir}/networks/aggregated_network.tsv"]

# Add visualization output if enabled
if config.get("visualization", {}).get("enabled", True):
    final_outputs.append(f"{outdir}/visualization/network_viewer.html")

# Add method-specific outputs based on config
if config["fastspar"]["enabled"]:
    final_outputs.append(f"{outdir}/networks/fastspar/network.tsv")
if config["spearman"]["enabled"]:
    final_outputs.append(f"{outdir}/networks/spearman/network.tsv")
if config["spieceasi"]["enabled"]:
    final_outputs.append(f"{outdir}/networks/spieceasi/network.tsv")
if config["propr"]["enabled"]:
    final_outputs.append(f"{outdir}/networks/propr/network.tsv")
if config["jaccard"]["enabled"]:
    final_outputs.append(f"{outdir}/networks/jaccard/network.tsv")
if config["flashweave"]["enabled"]:
    final_outputs.append(f"{outdir}/networks/flashweave/normal/network.tsv")
if config["flashweaveHE"]["enabled"]:
    final_outputs.append(f"{outdir}/networks/flashweave/HE/network.tsv")

rule all:
    input:
        final_outputs

# Ensure output directories exist
for path in [f"{outdir}/networks", f"{outdir}/visualization", f"{outdir}/logs"]:
    os.makedirs(path, exist_ok=True)